/**
 * viewy-view 0.5.0 (2014-03-19)
 * Copyright (c) 2014 Viewy Organization and Contributors
 * Released under the MIT license
 */
!function(factory){"use strict";"function"==typeof define&&define.amd?define(["jquery"],factory):"object"==typeof module&&module.exports?module.exports=factory(jQuery):window.View=factory(jQuery)}(function($){"use strict";function View(config){var self=this;config=config||{},self.name(config.name),self.bundle(config.bundle),self.parentView(config.parentView),self.childViews(config.childViews),self.onViewDidLoad().subscribe(config.onViewDidLoad),self.onViewWillUnload().subscribe(config.onViewWillUnload)}return View.config={ENABLE_ROOT_VIEW_WARNING:!0},View.prototype.extend=function(extension){function PrototypeConstructor(){this.constructor=extension.constructor}var self=this;extension=$.extend({constructor:function(config){self.super.constructor.call(this,config)}},extension);for(var key in self.constructor)({}).hasOwnProperty.call(self.constructor,key)&&(extension.constructor[key]=self.constructor[key]);return PrototypeConstructor.prototype=self.constructor.prototype,extension.constructor.prototype=new PrototypeConstructor,extension.constructor.prototype.super=self.constructor.prototype,$.extend(extension.constructor.prototype,extension),extension.constructor},View.prototype.viewDidLoad=function(){},View.prototype.viewWillUnload=function(){},View.prototype.definePropertyAccessors=function(name,accessors){return function(){if(0===arguments.length){if(accessors&&accessors.get)return accessors.get.apply(this);throw new Error(this+"->"+name+"(): Getter is not implemented.")}if(accessors&&accessors.set)return accessors.set.apply(this,$.makeArray(arguments));throw new Error(this+"->"+name+"(...): Setter is not implemented, property is read only.")}},View.prototype.name=View.prototype.definePropertyAccessors("name",{get:function(){return this._name},set:function(name){if(this.isLoaded())throw new Error(this+'->name("'+name+'"): Cannot change property while view is loaded.');this._name=name}}),View.prototype.bundle=View.prototype.definePropertyAccessors("bundle",{get:function(){return this._bundle},set:function(bundle){if(this.isLoaded())throw new Error(this+'->bundle("'+bundle+'"): Cannot change property while view is loaded.');this._bundle=bundle}}),View.prototype.parentView=View.prototype.definePropertyAccessors("parentView",{get:function(){return this._parentView},set:function(parentView){if(this.isLoaded())throw new Error(this+"->parentView( "+parentView+" ): Cannot change property while view is loaded.");this._parentView&&this._parentView.removeChildView(this),this._parentView=parentView,"undefined"!=typeof this._parentView&&this._parentView._childViews.push(this)}}),View.prototype.childViews=View.prototype.definePropertyAccessors("childViews",{get:function(){return this._childViews||[]},set:function(newChildViews){var self=this;self._childViews=self._childViews||[],newChildViews=newChildViews||[],self.removeAllChildViews(),$.each(newChildViews,function(index,newChildView){self.addChildView(newChildView)})}}),View.prototype.isRootView=View.prototype.definePropertyAccessors("isRootView",{get:function(){return void 0===this.parentView()}}),View.prototype.isLoaded=View.prototype.definePropertyAccessors("isLoaded",{get:function(){return void 0!==this._viewElement&&this._viewElement.length>0&&void 0!==this._containerElement&&this._containerElement.length>0}}),View.prototype.onViewDidLoad=View.prototype.definePropertyAccessors("onViewDidLoad",{get:function(){return this._onViewDidLoadCallbacks=this._onViewDidLoadCallbacks||$.Callbacks("unique memory"),{subscribe:this._onViewDidLoadCallbacks.add,unsubscribe:this._onViewDidLoadCallbacks.remove}},set:function(subscription){this._onViewDidLoadCallbacks=this._onViewDidLoadCallbacks||$.Callbacks("unique memory"),subscription&&subscription.subscribe&&this._onViewDidLoadCallbacks.add(subscription.subscribe)}}),View.prototype.onViewWillUnload=View.prototype.definePropertyAccessors("onViewWillUnload",{get:function(){return this._onViewWillUnloadCallbacks=this._onViewWillUnloadCallbacks||$.Callbacks("unique memory"),{subscribe:this._onViewWillUnloadCallbacks.add,unsubscribe:this._onViewWillUnloadCallbacks.remove}},set:function(subscription){this._onViewWillUnloadCallbacks=this._onViewWillUnloadCallbacks||$.Callbacks("unique memory"),subscription&&subscription.subscribe&&this._onViewWillUnloadCallbacks.add(subscription.subscribe)}}),View.prototype._containerElement,View.prototype._viewElement,View.prototype.addChildView=function(newChildView){var self=this;return self._childViews=self._childViews||[],$.each(self._childViews,function(index,existingChildView){if(existingChildView.name()&&existingChildView.name()===newChildView.name())throw new Error(self+"->addChildView( "+newChildView+" ): Another child view "+existingChildView+" already occupies the same view container.")}),newChildView.parentView(self),newChildView},View.prototype.removeChildView=function(childView){var self=this;self._childViews=self._childViews||[];var index=self._childViews.indexOf(childView);if(-1===index)throw new Error(self+"->removeChildView( "+childView+" ): View is not a child view.");childView.unload(),childView._parentView=void 0,self._childViews.splice(index,1)},View.prototype.removeAllChildViews=function(){var self=this;self._childViews=self._childViews||[],$.each(self._childViews,function(index,existingChildView){existingChildView.unload(),existingChildView._parentView=void 0}),self._childViews.length=0},View.prototype.removeFromParentView=function(){var self=this;if(!self._parentView)throw new Error(self+"->removeFromParentView(): View has no parent view.");self._parentView.removeChildView(self)},View.prototype.$=function(selector){var self=this;if(self.isLoaded())return selector?self._viewElement.find(selector):self._viewElement;if(selector)throw new Error(self+'->$("'+selector+'"): View is not loaded.');return[]},View.prototype.load=function(){var self=this;if(self.parentView()&&!self.parentView().isLoaded())throw new Error(self+"->load(): Parent view is not loaded yet.");if(!self.name())throw new Error(self+"->load(): Name not specified.");if(!self.bundle())throw new Error(self+"->load(): (HTML/CSS)-bundle not specified.");self.isRootView()&&View.config&&View.config.ENABLE_ROOT_VIEW_WARNING&&console.warn(self+"->load(): View will be loaded as a root view. (It is detached from any view hierarchy because it has no parent view.)"),self.unload();var containerElementSelector='[data-view-name="'+self.name()+'"]';if(self._containerElement=self.parentView()?self.parentView().$(containerElementSelector):$(containerElementSelector),0===self._containerElement.length)throw new Error(self+"->load(): Container element not specified or not existent.");if(self._containerElement.children().length>0&&self._containerElement.data("view"))throw new Error(self+"->load(): Container is currently occupied by another view: "+self._containerElement.data("view")+". Unload this view explicitly before attempting to load another view into the same container.");if(self.parentView()){if(self._containerElement.parents().index(self.parentView()._viewElement)<0)throw new Error(self+"->load(): Container element must be a descendant of the parent view's DOM.");if(self._containerElement.parents().index(self.parentView()._viewElement.find("[data-view-container]"))>=0)throw new Error(self+"->load(): Container element must not be a descendant of any other child view container inside the parent view's DOM.")}var viewDidLoad=$.Deferred();return require(["html!"+self.bundle()+".html","css!"+self.bundle()],function(html){self._viewElement=self._containerElement,self._containerElement=self._containerElement.clone();var $html=$(html);self._viewElement.replaceWith($html),self._viewElement=$html,self._viewElement.addClass(self._containerElement[0].className),self._viewElement.attr("data-view-name",self._containerElement.attr("data-view-name")),self._viewElement.attr("data-view-controller",self.constructor.name),self._viewElement.data("view",self),self.viewDidLoad(),self._onViewDidLoadCallbacks.fire(self),viewDidLoad.resolve(self),$.each(self.childViews(),function(index,childView){childView.load()})}),viewDidLoad.promise()},View.prototype.unload=function(){var self=this,viewWillUnload=$.Deferred();return self.isLoaded()&&($.each(self.childViews(),function(index,childView){childView.unload()}),self.viewWillUnload(),self._onViewWillUnloadCallbacks.fire(self),viewWillUnload.resolve(self),self._viewElement.removeData("view"),self._viewElement.replaceWith(self._containerElement),self._containerElement=void 0,self._viewElement=void 0),viewWillUnload.promise()},View.prototype.toString=function(){var self=this,str="["+self.constructor.name+(self.constructor.name===self.bundle()?"":"&"+self.bundle());return str+="@"+self.getPathInHierarchy(),str+=self.isLoaded()?":loaded":":!loaded",str+="]"},View.prototype.traverse=function(fn,level){var self=this;void 0===level&&(level=0),fn(self,level),$.each(self.childViews(),function(index,childView){childView.traverse(fn,level+1)})},View.prototype.getViewHierarchyHumanReadable=function(){var self=this,hierarchyOutput="";return self.traverse(function(view,level){for(var i=1;level>i;i++)hierarchyOutput+="|    ";level>0&&(hierarchyOutput+="|--> "),hierarchyOutput+=view+"\n"}),hierarchyOutput},View.prototype.getPathInHierarchy=function(){for(var self=this,pathOutput=self.name(),parentView=self.parentView();parentView;)pathOutput=parentView.name()+"/"+pathOutput,parentView=parentView.parentView();return pathOutput},View});